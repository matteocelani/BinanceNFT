{"ast":null,"code":"var _jsxFileName = \"/Users/matteocelani/Documents/FenneMic/GitHub/BinanceNFT/src/App.js\";\nimport React from 'react';\nimport { DataGrid } from '@material-ui/data-grid';\nimport Link from '@material-ui/core/Link';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction convertMiliseconds(miliseconds) {\n  var days, hours, minutes, seconds, total_hours, total_minutes, total_seconds;\n  total_seconds = parseInt(Math.floor(miliseconds / 1000));\n  total_minutes = parseInt(Math.floor(total_seconds / 60));\n  total_hours = parseInt(Math.floor(total_minutes / 60));\n  days = parseInt(Math.floor(total_hours / 24));\n  seconds = parseInt(total_seconds % 60);\n  minutes = parseInt(total_minutes % 60);\n  hours = parseInt(total_hours % 24);\n  return days + \"d :\" + hours + \"h :\" + minutes + \"m :\" + seconds + \"s\";\n}\n\n;\n\nfunction createTable(rows, finalRows) {\n  for (var i = 0; i < rows.length; i++) {\n    if (rows[i].tradeType === 0) {\n      if (rows[i].currency === \"BUSD\") {\n        finalRows[i] = {\n          id: rows[i].id,\n          title: rows[i].title,\n          usd: rows[i].amount,\n          amount: rows[i].amount,\n          currency: rows[i].currency,\n          tradeType: \"Buy Now\",\n          endTime: convertMiliseconds(rows[i].setEndTime - rows[i].setStartTime),\n          url: \"https://www.binance.com/en/nft/goods/blindBox/detail?productId=\" + rows[i].id + \"&isOpen=true&isProduct=1\"\n        };\n      } else if (rows[i].currency === \"BNB\") {\n        finalRows[i] = {\n          id: rows[i].id,\n          title: rows[i].title,\n          usd: coins[0].binancecoin.usd * rows[i].amount,\n          amount: rows[i].amount,\n          currency: rows[i].currency,\n          tradeType: \"Buy Now\",\n          endTime: convertMiliseconds(rows[i].setEndTime - rows[i].setStartTime),\n          url: \"https://www.binance.com/en/nft/goods/blindBox/detail?productId=\" + rows[i].id + \"&isOpen=true&isProduct=1\"\n        };\n      } else if (rows[i].currency === \"ETH\") {\n        finalRows[i] = {\n          id: rows[i].id,\n          title: rows[i].title,\n          usd: coins[0].ethereum.usd * rows[i].amount,\n          amount: rows[i].amount,\n          currency: rows[i].currency,\n          tradeType: \"Buy Now\",\n          endTime: convertMiliseconds(rows[i].setEndTime - rows[i].setStartTime),\n          url: \"https://www.binance.com/en/nft/goods/blindBox/detail?productId=\" + rows[i].id + \"&isOpen=true&isProduct=1\"\n        };\n      }\n    } else {\n      if (rows[i].currency === \"BUSD\") {\n        finalRows[i] = {\n          id: rows[i].id,\n          title: rows[i].title,\n          usd: rows[i].amount,\n          amount: rows[i].amount,\n          currency: rows[i].currency,\n          tradeType: \"Auction\",\n          endTime: convertMiliseconds(rows[i].setEndTime - rows[i].setStartTime),\n          url: \"https://www.binance.com/en/nft/goods/blindBox/detail?productId=\" + rows[i].id + \"&isOpen=true&isProduct=1\"\n        };\n      } else if (rows[i].currency === \"BNB\") {\n        finalRows[i] = {\n          id: rows[i].id,\n          title: rows[i].title,\n          usd: coins[0].binancecoin.usd * rows[i].amount,\n          amount: rows[i].amount,\n          currency: rows[i].currency,\n          tradeType: \"Auction\",\n          endTime: convertMiliseconds(rows[i].setEndTime - rows[i].setStartTime),\n          url: \"https://www.binance.com/en/nft/goods/blindBox/detail?productId=\" + rows[i].id + \"&isOpen=true&isProduct=1\"\n        };\n      } else if (rows[i].currency === \"ETH\") {\n        finalRows[i] = {\n          id: rows[i].id,\n          title: rows[i].title,\n          usd: coins[0].ethereum.usd * rows[i].amount,\n          amount: rows[i].amount,\n          currency: rows[i].currency,\n          tradeType: \"Auction\",\n          endTime: convertMiliseconds(rows[i].setEndTime - rows[i].setStartTime),\n          url: \"https://www.binance.com/en/nft/goods/blindBox/detail?productId=\" + rows[i].id + \"&isOpen=true&isProduct=1\"\n        };\n      }\n    }\n  }\n\n  return finalRows;\n}\n\nexport default function App(data) {\n  const columns = [{\n    field: \"id\",\n    type: \"number\",\n    headerName: \"ID\",\n    width: 100,\n    editable: false\n  }, {\n    field: \"title\",\n    headerName: \"Name\",\n    width: 250,\n    editable: false\n  }, {\n    field: \"amount\",\n    headerName: \"Price\",\n    type: \"number\",\n    width: 115,\n    editable: false\n  }, {\n    field: \"currency\",\n    headerName: \"Coin\",\n    width: 120,\n    editable: false\n  }, {\n    field: \"usd\",\n    headerName: \"Price USD\",\n    type: \"number\",\n    width: 150,\n    editable: false\n  }, {\n    field: \"tradeType\",\n    headerName: \"Trade Type\",\n    type: \"number\",\n    width: 150,\n    editable: false\n  }, {\n    field: \"endTime\",\n    headerName: \"End Time\",\n    type: \"number\",\n    width: 200,\n    editable: false\n  }, {\n    field: \"url\",\n    headerName: \"URL\",\n    width: 300,\n    renderCell: params => /*#__PURE__*/_jsxDEV(Link, {\n      target: \"_blank\",\n      href: params.value,\n      children: params.value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }, this),\n    editable: false\n  }];\n\n  if (data.data.error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", data.data.error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 12\n    }, this);\n  } else if (!data.data.isLoaded && !data.data.coinsLoad) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 12\n    }, this);\n  } else {\n    const rows = data.data.items.map(row => {\n      const {\n        productId,\n        ...rest\n      } = row;\n      return {\n        id: productId,\n        ...rest\n      };\n    });\n    const coins = [data.data.coins.data];\n    const finalRows = [];\n    createTable(rows, finalRows, coins);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: 850,\n        width: \"100%\"\n      },\n      children: /*#__PURE__*/_jsxDEV(DataGrid, {\n        rows: finalRows,\n        columns: columns,\n        rowsPerPageOptions: [100, 250, 500],\n        pageSize: 100,\n        density: \"compact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this);\n  }\n}\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/matteocelani/Documents/FenneMic/GitHub/BinanceNFT/src/App.js"],"names":["React","DataGrid","Link","convertMiliseconds","miliseconds","days","hours","minutes","seconds","total_hours","total_minutes","total_seconds","parseInt","Math","floor","createTable","rows","finalRows","i","length","tradeType","currency","id","title","usd","amount","endTime","setEndTime","setStartTime","url","coins","binancecoin","ethereum","App","data","columns","field","type","headerName","width","editable","renderCell","params","value","error","message","isLoaded","coinsLoad","items","map","row","productId","rest","height"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { DataGrid } from '@material-ui/data-grid';\nimport Link from '@material-ui/core/Link';\n\nfunction convertMiliseconds(miliseconds) {\n  var days, hours, minutes, seconds, total_hours, total_minutes, total_seconds;\n  \n  total_seconds = parseInt(Math.floor(miliseconds / 1000));\n  total_minutes = parseInt(Math.floor(total_seconds / 60));\n  total_hours = parseInt(Math.floor(total_minutes / 60));\n  days = parseInt(Math.floor(total_hours / 24));\n\n  seconds = parseInt(total_seconds % 60);\n  minutes = parseInt(total_minutes % 60);\n  hours = parseInt(total_hours % 24); \n  \n  return days + \"d :\" + hours + \"h :\" + minutes + \"m :\" + seconds + \"s\";\n};\n\nfunction createTable(rows, finalRows) {\n  for (var i = 0; i < rows.length; i++) {\n    if (rows[i].tradeType === 0) {\n      if (rows[i].currency === \"BUSD\") {\n        finalRows[i] =   \n      {\n        id: rows[i].id,\n        title: rows[i].title,\n        usd:rows[i].amount,\n        amount: rows[i].amount,\n        currency: rows[i].currency,\n        tradeType: \"Buy Now\",\n        endTime: convertMiliseconds(rows[i].setEndTime - rows[i].setStartTime),\n        url: \"https://www.binance.com/en/nft/goods/blindBox/detail?productId=\"+rows[i].id+\"&isOpen=true&isProduct=1\"\n      }\n      } else if (rows[i].currency === \"BNB\") {\n        finalRows[i] =   \n        {\n          id: rows[i].id,\n          title: rows[i].title,\n          usd: coins[0].binancecoin.usd * rows[i].amount,\n          amount: rows[i].amount,\n          currency: rows[i].currency,\n          tradeType: \"Buy Now\",\n          endTime: convertMiliseconds(rows[i].setEndTime - rows[i].setStartTime),\n          url: \"https://www.binance.com/en/nft/goods/blindBox/detail?productId=\"+rows[i].id+\"&isOpen=true&isProduct=1\"\n        }\n        } else if (rows[i].currency === \"ETH\") {\n          finalRows[i] =   \n          {\n            id: rows[i].id,\n            title: rows[i].title,\n            usd: coins[0].ethereum.usd * rows[i].amount,\n            amount: rows[i].amount,\n            currency: rows[i].currency,\n            tradeType: \"Buy Now\",\n            endTime: convertMiliseconds(rows[i].setEndTime - rows[i].setStartTime),\n            url: \"https://www.binance.com/en/nft/goods/blindBox/detail?productId=\"+rows[i].id+\"&isOpen=true&isProduct=1\"\n          }\n        }\n    } else {\n      if (rows[i].currency === \"BUSD\") {\n        finalRows[i] =   \n      {\n        id: rows[i].id,\n        title: rows[i].title,\n        usd:rows[i].amount,\n        amount: rows[i].amount,\n        currency: rows[i].currency,\n        tradeType: \"Auction\",\n        endTime: convertMiliseconds(rows[i].setEndTime - rows[i].setStartTime),\n        url: \"https://www.binance.com/en/nft/goods/blindBox/detail?productId=\"+rows[i].id+\"&isOpen=true&isProduct=1\"\n      }\n      } else if (rows[i].currency === \"BNB\") {\n        finalRows[i] =   \n        {\n          id: rows[i].id,\n          title: rows[i].title,\n          usd: coins[0].binancecoin.usd * rows[i].amount,\n          amount: rows[i].amount,\n          currency: rows[i].currency,\n          tradeType: \"Auction\",\n          endTime: convertMiliseconds(rows[i].setEndTime - rows[i].setStartTime),\n          url: \"https://www.binance.com/en/nft/goods/blindBox/detail?productId=\"+rows[i].id+\"&isOpen=true&isProduct=1\"\n        }\n        } else if (rows[i].currency === \"ETH\") {\n          finalRows[i] =   \n          {\n            id: rows[i].id,\n            title: rows[i].title,\n            usd: coins[0].ethereum.usd * rows[i].amount,\n            amount: rows[i].amount,\n            currency: rows[i].currency,\n            tradeType: \"Auction\",\n            endTime: convertMiliseconds(rows[i].setEndTime - rows[i].setStartTime),\n            url: \"https://www.binance.com/en/nft/goods/blindBox/detail?productId=\"+rows[i].id+\"&isOpen=true&isProduct=1\"\n          }\n        }\n    }\n  } \n\n  return finalRows;\n}\n\nexport default function App(data) {\n\n  const columns = [\n    {\n      field: \"id\",\n      type: \"number\",\n      headerName: \"ID\",\n      width: 100,\n      editable: false\n    },\n    {\n      field: \"title\",\n      headerName: \"Name\",\n      width: 250,\n      editable: false\n    },\n    {\n      field: \"amount\",\n      headerName: \"Price\",\n      type: \"number\",\n      width: 115,\n      editable: false\n    },\n    {\n      field: \"currency\",\n      headerName: \"Coin\",\n      width: 120,\n      editable: false\n    },\n    {\n      field: \"usd\",\n      headerName: \"Price USD\",\n      type: \"number\",\n      width: 150,\n      editable: false\n    },\n    {\n      field: \"tradeType\",\n      headerName: \"Trade Type\",\n      type: \"number\",\n      width: 150,\n      editable: false\n    },\n    {\n      field: \"endTime\",\n      headerName: \"End Time\",\n      type: \"number\",\n      width: 200,\n      editable: false\n    },\n    {\n      field: \"url\",\n      headerName: \"URL\",\n      width: 300,\n      renderCell: (params) => (\n        <Link target=\"_blank\" href={params.value}>{params.value}</Link>),\n      editable: false\n    }\n  ];\n\n  if (data.data.error) {\n    return <div>Error: {data.data.error.message}</div>;\n  } else if (!data.data.isLoaded && !data.data.coinsLoad) {\n    return <div>Loading...</div>;\n  } else {\n    const rows = data.data.items.map((row) => {\n      const { productId, ...rest } = row;\n      return { id: productId, ...rest };\n    });\n    const coins = [data.data.coins.data]\n    const finalRows = [];\n    createTable(rows, finalRows, coins)\n\n    return (\n      <div style={{ height: 850, width: \"100%\" }}>\n        <DataGrid\n          rows={finalRows}\n          columns={columns}\n          rowsPerPageOptions={[100, 250, 500]}\n          pageSize={100}\n          density=\"compact\"\n        />\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}