{"ast":null,"code":"var _jsxFileName = \"/Users/matteocelani/Documents/FenneMic/GitHub/BinanceNFT/src/App.js\";\nimport React from 'react';\nimport { DataGrid } from '@material-ui/data-grid';\nimport Link from '@material-ui/core/Link';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App(data) {\n  const columns = [{\n    field: \"id\",\n    type: \"number\",\n    headerName: \"ID\",\n    width: 100,\n    editable: false\n  }, {\n    field: \"title\",\n    headerName: \"Name\",\n    width: 250,\n    editable: false\n  }, {\n    field: \"amount\",\n    headerName: \"Price\",\n    type: \"number\",\n    width: 115,\n    editable: false\n  }, {\n    field: \"currency\",\n    headerName: \"Coin\",\n    width: 120,\n    editable: false\n  }, {\n    field: \"usd\",\n    headerName: \"Price USD\",\n    type: \"number\",\n    width: 150,\n    editable: false\n  }, {\n    field: \"tradeType\",\n    headerName: \"Trade Type\",\n    type: \"number\",\n    width: 150,\n    editable: false\n  }, {\n    field: \"url\",\n    headerName: \"URL\",\n    width: 250,\n    renderCell: params => /*#__PURE__*/_jsxDEV(Link, {\n      target: \"_blank\",\n      href: params.value,\n      children: params.value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this),\n    editable: false\n  }];\n  const newItem = {};\n\n  if (data.data.numItems > 100) {\n    let totalItem = data.data.numItems - 100;\n    let page = 2;\n    let newBody = \"{\\\"category\\\":0,\\\"keyword\\\":\\\"\" + data.data.itemName + \"\\\",\\\"orderBy\\\":\\\"list_time\\\",\\\"orderType\\\":-1,\\\"page\\\":\" + page + \",\\\"rows\\\":100}\";\n\n    do {\n      axios({\n        method: 'post',\n        url: 'https://www.binance.com/bapi/nft/v1/public/nft/product-list',\n        headers: {\n          \"accept\": \"*/*\",\n          \"accept-language\": \"it-IT,it;q=0.9,en-US;q=0.8,en;q=0.7\",\n          \"clienttype\": \"web\",\n          \"content-type\": \"application/json\",\n          \"lang\": \"en\"\n        },\n        data: newBody\n      }).then(response => {\n        this.setState.Push({\n          newitem: response.data.data.rows\n        });\n      }).catch(error => {//\n      });\n      page++;\n      totalItem = totalItem - 100;\n      newBody = \"{\\\"category\\\":0,\\\"keyword\\\":\\\"\" + data.data.itemName + \"\\\",\\\"orderBy\\\":\\\"list_time\\\",\\\"orderType\\\":-1,\\\"page\\\":\" + page + \",\\\"rows\\\":100}\";\n      console.log(newItem);\n    } while (totalItem > 0);\n  }\n\n  const rows = data.data.items.map(row => {\n    const {\n      productId,\n      ...rest\n    } = row;\n    return {\n      id: productId,\n      ...rest\n    };\n  });\n  const coins = [data.data.coins.data];\n  const finalRows = [];\n  console.log(finalRows);\n\n  for (var i = 0; i < rows.length; i++) {\n    if (rows[i].tradeType === 1) {\n      if (rows[i].currency === \"BUSD\") {\n        finalRows[i] = {\n          id: rows[i].id,\n          title: rows[i].title,\n          usd: rows[i].amount,\n          amount: rows[i].amount,\n          currency: rows[i].currency,\n          tradeType: \"Auction\",\n          url: \"https://www.binance.com/en/nft/goods/blindBox/detail?productId=\" + rows[i].id + \"&isOpen=true&isProduct=1\"\n        };\n      } else if (rows[i].currency === \"BNB\") {\n        finalRows[i] = {\n          id: rows[i].id,\n          title: rows[i].title,\n          usd: coins[0].binancecoin.usd * rows[i].amount,\n          amount: rows[i].amount,\n          currency: rows[i].currency,\n          tradeType: \"Auction\",\n          url: \"https://www.binance.com/en/nft/goods/blindBox/detail?productId=\" + rows[i].id + \"&isOpen=true&isProduct=1\"\n        };\n      } else if (rows[i].currency === \"ETH\") {\n        finalRows[i] = {\n          id: rows[i].id,\n          title: rows[i].title,\n          usd: coins[0].ethereum.usd * rows[i].amount,\n          amount: rows[i].amount,\n          currency: rows[i].currency,\n          tradeType: \"Auction\",\n          url: \"https://www.binance.com/en/nft/goods/blindBox/detail?productId=\" + rows[i].id + \"&isOpen=true&isProduct=1\"\n        };\n      }\n    } else {\n      if (rows[i].currency === \"BUSD\") {\n        finalRows[i] = {\n          id: rows[i].id,\n          title: rows[i].title,\n          usd: rows[i].amount,\n          amount: rows[i].amount,\n          currency: rows[i].currency,\n          tradeType: \"Buy Now\",\n          url: \"https://www.binance.com/en/nft/goods/blindBox/detail?productId=\" + rows[i].id + \"&isOpen=true&isProduct=1\"\n        };\n      } else if (rows[i].currency === \"BNB\") {\n        finalRows[i] = {\n          id: rows[i].id,\n          title: rows[i].title,\n          usd: coins[0].binancecoin.usd * rows[i].amount,\n          amount: rows[i].amount,\n          currency: rows[i].currency,\n          tradeType: \"Buy Now\",\n          url: \"https://www.binance.com/en/nft/goods/blindBox/detail?productId=\" + rows[i].id + \"&isOpen=true&isProduct=1\"\n        };\n      } else if (rows[i].currency === \"ETH\") {\n        finalRows[i] = {\n          id: rows[i].id,\n          title: rows[i].title,\n          usd: coins[0].ethereum.usd * rows[i].amount,\n          amount: rows[i].amount,\n          currency: rows[i].currency,\n          tradeType: \"Buy Now\",\n          url: \"https://www.binance.com/en/nft/goods/blindBox/detail?productId=\" + rows[i].id + \"&isOpen=true&isProduct=1\"\n        };\n      }\n    }\n  }\n\n  if (data.data.error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", data.data.error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 12\n    }, this);\n  } else if (!data.data.isLoaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 12\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: 1200,\n        width: \"100%\"\n      },\n      children: /*#__PURE__*/_jsxDEV(DataGrid, {\n        rows: finalRows,\n        columns: columns,\n        pageSize: 100,\n        density: \"compact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this);\n  }\n}\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/matteocelani/Documents/FenneMic/GitHub/BinanceNFT/src/App.js"],"names":["React","DataGrid","Link","axios","App","data","columns","field","type","headerName","width","editable","renderCell","params","value","newItem","numItems","totalItem","page","newBody","itemName","method","url","headers","then","response","setState","Push","newitem","rows","catch","error","console","log","items","map","row","productId","rest","id","coins","finalRows","i","length","tradeType","currency","title","usd","amount","binancecoin","ethereum","message","isLoaded","height"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { DataGrid } from '@material-ui/data-grid';\nimport Link from '@material-ui/core/Link';\nimport axios from 'axios';\n\nexport default function App(data) {\n\n  const columns = [\n    {\n      field: \"id\",\n      type: \"number\",\n      headerName: \"ID\",\n      width: 100,\n      editable: false\n    },\n    {\n      field: \"title\",\n      headerName: \"Name\",\n      width: 250,\n      editable: false\n    },\n    {\n      field: \"amount\",\n      headerName: \"Price\",\n      type: \"number\",\n      width: 115,\n      editable: false\n    },\n    {\n      field: \"currency\",\n      headerName: \"Coin\",\n      width: 120,\n      editable: false\n    },\n    {\n      field: \"usd\",\n      headerName: \"Price USD\",\n      type: \"number\",\n      width: 150,\n      editable: false\n    },\n    {\n      field: \"tradeType\",\n      headerName: \"Trade Type\",\n      type: \"number\",\n      width: 150,\n      editable: false\n    },\n    {\n      field: \"url\",\n      headerName: \"URL\",\n      width: 250,\n      renderCell: (params) => (\n        <Link target=\"_blank\" href={params.value}>{params.value}</Link>),\n      editable: false\n    }\n  ];\n\n  const newItem = {}\n  if (data.data.numItems > 100 ) {\n    let totalItem = data.data.numItems - 100\n    let page = 2\n    let newBody = \"{\\\"category\\\":0,\\\"keyword\\\":\\\"\" + data.data.itemName + \"\\\",\\\"orderBy\\\":\\\"list_time\\\",\\\"orderType\\\":-1,\\\"page\\\":\" + page + \",\\\"rows\\\":100}\"\n    do {\n      axios({\n        method: 'post',\n        url: 'https://www.binance.com/bapi/nft/v1/public/nft/product-list',\n        headers: {\n          \"accept\": \"*/*\",\n          \"accept-language\": \"it-IT,it;q=0.9,en-US;q=0.8,en;q=0.7\",\n          \"clienttype\": \"web\",\n          \"content-type\": \"application/json\",\n          \"lang\": \"en\"\n        },\n        data: newBody\n      })\n        .then((response) => {\n          this.setState.Push({\n            newitem: response.data.data.rows\n          });\n        })\n        .catch((error) => \n        {\n          //\n        });\n\n        page ++ \n        totalItem = totalItem -100\n        newBody = \"{\\\"category\\\":0,\\\"keyword\\\":\\\"\" + data.data.itemName + \"\\\",\\\"orderBy\\\":\\\"list_time\\\",\\\"orderType\\\":-1,\\\"page\\\":\" + page + \",\\\"rows\\\":100}\"\n        console.log(newItem)\n    } while (totalItem > 0)\n  }\n\n  const rows = data.data.items.map((row) => {\n    const { productId, ...rest } = row;\n    return { id: productId, ...rest };\n  });\n  const coins = [data.data.coins.data]\n\n  const finalRows = [];\n  console.log(finalRows)\n  for (var i = 0; i < rows.length; i++) {\n    if (rows[i].tradeType === 1) {\n      if (rows[i].currency === \"BUSD\") {\n        finalRows[i] =   \n      {\n        id: rows[i].id,\n        title: rows[i].title,\n        usd:rows[i].amount,\n        amount: rows[i].amount,\n        currency: rows[i].currency,\n        tradeType: \"Auction\",\n        url: \"https://www.binance.com/en/nft/goods/blindBox/detail?productId=\"+rows[i].id+\"&isOpen=true&isProduct=1\"\n      }\n      } else if (rows[i].currency === \"BNB\") {\n        finalRows[i] =   \n        {\n          id: rows[i].id,\n          title: rows[i].title,\n          usd: coins[0].binancecoin.usd * rows[i].amount,\n          amount: rows[i].amount,\n          currency: rows[i].currency,\n          tradeType: \"Auction\",\n          url: \"https://www.binance.com/en/nft/goods/blindBox/detail?productId=\"+rows[i].id+\"&isOpen=true&isProduct=1\"\n        }\n        } else if (rows[i].currency === \"ETH\") {\n          finalRows[i] =   \n          {\n            id: rows[i].id,\n            title: rows[i].title,\n            usd: coins[0].ethereum.usd * rows[i].amount,\n            amount: rows[i].amount,\n            currency: rows[i].currency,\n            tradeType: \"Auction\",\n            url: \"https://www.binance.com/en/nft/goods/blindBox/detail?productId=\"+rows[i].id+\"&isOpen=true&isProduct=1\"\n          }\n        }\n    } else {\n      if (rows[i].currency === \"BUSD\") {\n        finalRows[i] =   \n      {\n        id: rows[i].id,\n        title: rows[i].title,\n        usd:rows[i].amount,\n        amount: rows[i].amount,\n        currency: rows[i].currency,\n        tradeType: \"Buy Now\",\n        url: \"https://www.binance.com/en/nft/goods/blindBox/detail?productId=\"+rows[i].id+\"&isOpen=true&isProduct=1\"\n      }\n      } else if (rows[i].currency === \"BNB\") {\n        finalRows[i] =   \n        {\n          id: rows[i].id,\n          title: rows[i].title,\n          usd: coins[0].binancecoin.usd * rows[i].amount,\n          amount: rows[i].amount,\n          currency: rows[i].currency,\n          tradeType: \"Buy Now\",\n          url: \"https://www.binance.com/en/nft/goods/blindBox/detail?productId=\"+rows[i].id+\"&isOpen=true&isProduct=1\"\n        }\n        } else if (rows[i].currency === \"ETH\") {\n          finalRows[i] =   \n          {\n            id: rows[i].id,\n            title: rows[i].title,\n            usd: coins[0].ethereum.usd * rows[i].amount,\n            amount: rows[i].amount,\n            currency: rows[i].currency,\n            tradeType: \"Buy Now\",\n            url: \"https://www.binance.com/en/nft/goods/blindBox/detail?productId=\"+rows[i].id+\"&isOpen=true&isProduct=1\"\n          }\n        }\n    }\n  } \n\n  if (data.data.error) {\n    return <div>Error: {data.data.error.message}</div>;\n  } else if (!data.data.isLoaded) {\n    return <div>Loading...</div>;\n  } else {\n    return (\n      <div style={{ height: 1200, width: \"100%\" }}>\n        <DataGrid\n          rows={finalRows}\n          columns={columns}\n          pageSize={100}\n          density=\"compact\"\n        />\n      </div>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}