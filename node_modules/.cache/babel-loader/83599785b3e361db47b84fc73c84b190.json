{"ast":null,"code":"var _jsxFileName = \"/Users/matteocelani/Desktop/NFT/ordern-nft/src/App.js\";\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport React from 'react';\nimport { DataGrid } from '@material-ui/data-grid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  field: \"id\",\n  headerName: \"ID\",\n  width: 90\n}, {\n  field: \"firstName\",\n  headerName: \"First name\",\n  width: 150,\n  editable: true\n}, {\n  field: \"lastName\",\n  headerName: \"Last name\",\n  width: 150,\n  editable: true\n}, {\n  field: \"age\",\n  headerName: \"Age\",\n  type: \"number\",\n  width: 110,\n  editable: true\n}, {\n  field: \"fullName\",\n  headerName: \"Full name\",\n  description: \"This column has a value getter and is not sortable.\",\n  sortable: false,\n  width: 160,\n  valueGetter: params => `${params.getValue(params.id, \"firstName\") || \"\"} ${params.getValue(params.id, \"lastName\") || \"\"}`\n}];\nconst rows = [{\n  id: 1,\n  lastName: \"Snow\",\n  firstName: \"Jon\",\n  age: 35\n}, {\n  id: 2,\n  lastName: \"Lannister\",\n  firstName: \"Cersei\",\n  age: 42\n}, {\n  id: 3,\n  lastName: \"Lannister\",\n  firstName: \"Jaime\",\n  age: 45\n}, {\n  id: 4,\n  lastName: \"Stark\",\n  firstName: \"Arya\",\n  age: 16\n}, {\n  id: 5,\n  lastName: \"Targaryen\",\n  firstName: \"Daenerys\",\n  age: null\n}, {\n  id: 6,\n  lastName: \"Melisandre\",\n  firstName: null,\n  age: 150\n}, {\n  id: 7,\n  lastName: \"Clifford\",\n  firstName: \"Ferrara\",\n  age: 44\n}, {\n  id: 8,\n  lastName: \"Frances\",\n  firstName: \"Rossini\",\n  age: 36\n}, {\n  id: 9,\n  lastName: \"Roxie\",\n  firstName: \"Harvey\",\n  age: 65\n}];\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://www.binance.com/bapi/nft/v1/public/nft/product-list\", {\n      \"headers\": {\n        \"accept\": \"*/*\",\n        \"accept-language\": \"it-IT,it;q=0.9,en-US;q=0.8,en;q=0.7\",\n        \"bnc-uuid\": \"8f4fb583-8175-4258-ac46-159f30f01411\",\n        \"clienttype\": \"web\",\n        \"content-type\": \"application/json\",\n        \"csrftoken\": \"d41d8cd98f00b204e9800998ecf8427e\",\n        \"device-info\": \"eyJzY3JlZW5fcmVzb2x1dGlvbiI6IjIwNDgsMTI4MCIsImF2YWlsYWJsZV9zY3JlZW5fcmVzb2x1dGlvbiI6IjIwNDgsMTI1NSIsInN5c3RlbV92ZXJzaW9uIjoiTWFjIE9TIDEwLjE1LjciLCJicmFuZF9tb2RlbCI6InVua25vd24iLCJzeXN0ZW1fbGFuZyI6Iml0LUlUIiwidGltZXpvbmUiOiJHTVQrMiIsInRpbWV6b25lT2Zmc2V0IjotMTIwLCJ1c2VyX2FnZW50IjoiTW96aWxsYS81LjAgKE1hY2ludG9zaDsgSW50ZWwgTWFjIE9TIFggMTBfMTVfNykgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzkxLjAuNDQ3Mi4xNjQgU2FmYXJpLzUzNy4zNiIsImxpc3RfcGx1Z2luIjoiT0hqUm9VcTEsQnJhdmUgUG9ydGFibGUgRG9jdW1lbnQgRm9ybWF0IHBsdWctaW4sYXRXclZLRixCcmF2ZSBkb2MgIiwiY2FudmFzX2NvZGUiOiI2ZWM2ZGQyZSIsIndlYmdsX3ZlbmRvciI6IkludGVsIEluYy4iLCJ3ZWJnbF9yZW5kZXJlciI6IkludGVsKFIpIFVIRCBHcmFwaGljcyA2MzAiLCJhdWRpbyI6IjEyMi44MTI4NTU3MTk1MjMyMSIsInBsYXRmb3JtIjoiTWFjSW50ZWwiLCJ3ZWJfdGltZXpvbmUiOiJFdXJvcGUvUm9tZSIsImRldmljZV9uYW1lIjoiQ2hyb21lIFY5MS4wLjQ0NzIuMTY0IChNYWMgT1MpIiwiZmluZ2VycHJpbnQiOiIzODE4MDlmZDU0MDBiNmU0MTZhMmEwYmMzYWU5OTBjMyIsImRldmljZV9pZCI6IiIsInJlbGF0ZWRfZGV2aWNlX2lkcyI6IiJ9\",\n        \"fvideo-id\": \"3136771bac4babbe9b571f7c39bbab26e305dd80\",\n        \"lang\": \"en\",\n        \"sec-fetch-dest\": \"empty\",\n        \"sec-fetch-mode\": \"cors\",\n        \"sec-fetch-site\": \"same-origin\",\n        \"sec-gpc\": \"1\",\n        \"x-trace-id\": \"628d832a-f923-4eb1-851c-717006c7ddaf\",\n        \"x-ui-request-trace\": \"628d832a-f923-4eb1-851c-717006c7ddaf\",\n        \"cookie\": \"cid=forA6zjn; bnc-uuid=8f4fb583-8175-4258-ac46-159f30f01411; source=organic; campaign=www.google.com; fiat-prefer-currency=EUR; nft-init-compliance=true; home-ui-ab=B; isAccountsLoggedIn=y; lang=it; userPreferredCurrency=EUR_USD; BNC_FV_KEY=3136771bac4babbe9b571f7c39bbab26e305dd80; BNC_FV_KEY_EXPIRE=1627549151381; sensorsdata2015jssdkcross=%7B%22distinct_id%22%3A%2272530447%22%2C%22first_id%22%3A%221775a1b52a7957-06b8150f14079a-6915227c-2621440-1775a1b52a9b92%22%2C%22props%22%3A%7B%22%24latest_traffic_source_type%22%3A%22%E7%9B%B4%E6%8E%A5%E6%B5%81%E9%87%8F%22%2C%22%24latest_search_keyword%22%3A%22%E6%9C%AA%E5%8F%96%E5%88%B0%E5%80%BC_%E7%9B%B4%E6%8E%A5%E6%89%93%E5%BC%80%22%2C%22%24latest_referrer%22%3A%22%22%7D%2C%22%24device_id%22%3A%221775a1b52a7957-06b8150f14079a-6915227c-2621440-1775a1b52a9b92%22%7D\"\n      },\n      \"referrer\": \"https://www.binance.com/en/nft/market\",\n      \"referrerPolicy\": \"origin-when-cross-origin\",\n      \"body\": \"{\\\"category\\\":0,\\\"keyword\\\":\\\"\\\",\\\"orderBy\\\":\\\"list_time\\\",\\\"orderType\\\":-1,\\\"page\\\":1,\\\"rows\\\":100}\",\n      \"method\": \"POST\",\n      \"mode\": \"cors\"\n    }).then(res => res.json()).then(result => {\n      this.setState({\n        isLoaded: true,\n        items: result.data.rows\n      });\n    }, // Nota: Ã¨ importante gestire gli errori qui\n    // invece di un blocco catch() in modo da non fare passare\n    // eccezioni da bug reali nei componenti.\n    error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  }\n\n  render() {\n    const {\n      error,\n      isLoaded,\n      items\n    } = this.state;\n\n    if (error) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Error: \", error.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 14\n      }, this);\n    } else if (!isLoaded) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 14\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: 400,\n          width: \"100%\"\n        },\n        children: /*#__PURE__*/_jsxDEV(DataGrid, {\n          rows: rows,\n          columns: columns,\n          pageSize: 100,\n          checkboxSelection: true,\n          disableSelectionOnClick: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)\n      /*\n      return (\n        <table className=\"tabella\">\n          <tr>\n            <th>ID</th>\n            <th>Prezzo</th>\n            <th>Valuta</th>\n            <th>URL</th>\n          </tr>\n          {items.map(item => (\n            <tr key={item.productId}>\n              <td>\n                {item.productId}\n              </td>\n              <td className=\"price\">\n                {item.amount}\n              </td>\n              <td>\n                {item.currency}\n              </td>\n              <td className=\"url\">\n                https://www.binance.com/en/nft/goods/blindBox/detail?productId={item.productId}&isProduct=1\n              </td>\n            </tr>\n          ))}\n        </table>*/\n      ;\n    }\n  }\n\n}\n\nexport { App };\n/*this.state.items.sort((a, b) => a.amount > b.amount ? 1:-1).map(\n          (item, i) => <div key={item.productId}> {item.productId} {item.amount} {item.currency}</div>\n      )*/","map":{"version":3,"sources":["/Users/matteocelani/Desktop/NFT/ordern-nft/src/App.js"],"names":["React","DataGrid","columns","field","headerName","width","editable","type","description","sortable","valueGetter","params","getValue","id","rows","lastName","firstName","age","App","Component","constructor","props","state","error","isLoaded","items","componentDidMount","fetch","then","res","json","result","setState","data","render","message","height"],"mappings":"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","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport React from 'react';\nimport { DataGrid } from '@material-ui/data-grid';\n\nconst columns = [\n  { field: \"id\", headerName: \"ID\", width: 90 },\n  {\n    field: \"firstName\",\n    headerName: \"First name\",\n    width: 150,\n    editable: true\n  },\n  {\n    field: \"lastName\",\n    headerName: \"Last name\",\n    width: 150,\n    editable: true\n  },\n  {\n    field: \"age\",\n    headerName: \"Age\",\n    type: \"number\",\n    width: 110,\n    editable: true\n  },\n  {\n    field: \"fullName\",\n    headerName: \"Full name\",\n    description: \"This column has a value getter and is not sortable.\",\n    sortable: false,\n    width: 160,\n    valueGetter: (params) =>\n      `${params.getValue(params.id, \"firstName\") || \"\"} ${\n        params.getValue(params.id, \"lastName\") || \"\"\n      }`\n  }\n];\n\nconst rows = [\n  { id: 1, lastName: \"Snow\", firstName: \"Jon\", age: 35 },\n  { id: 2, lastName: \"Lannister\", firstName: \"Cersei\", age: 42 },\n  { id: 3, lastName: \"Lannister\", firstName: \"Jaime\", age: 45 },\n  { id: 4, lastName: \"Stark\", firstName: \"Arya\", age: 16 },\n  { id: 5, lastName: \"Targaryen\", firstName: \"Daenerys\", age: null },\n  { id: 6, lastName: \"Melisandre\", firstName: null, age: 150 },\n  { id: 7, lastName: \"Clifford\", firstName: \"Ferrara\", age: 44 },\n  { id: 8, lastName: \"Frances\", firstName: \"Rossini\", age: 36 },\n  { id: 9, lastName: \"Roxie\", firstName: \"Harvey\", age: 65 }\n];\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://www.binance.com/bapi/nft/v1/public/nft/product-list\", {\n      \"headers\": {\n        \"accept\": \"*/*\",\n        \"accept-language\": \"it-IT,it;q=0.9,en-US;q=0.8,en;q=0.7\",\n        \"bnc-uuid\": \"8f4fb583-8175-4258-ac46-159f30f01411\",\n        \"clienttype\": \"web\",\n        \"content-type\": \"application/json\",\n        \"csrftoken\": \"d41d8cd98f00b204e9800998ecf8427e\",\n        \"device-info\": \"eyJzY3JlZW5fcmVzb2x1dGlvbiI6IjIwNDgsMTI4MCIsImF2YWlsYWJsZV9zY3JlZW5fcmVzb2x1dGlvbiI6IjIwNDgsMTI1NSIsInN5c3RlbV92ZXJzaW9uIjoiTWFjIE9TIDEwLjE1LjciLCJicmFuZF9tb2RlbCI6InVua25vd24iLCJzeXN0ZW1fbGFuZyI6Iml0LUlUIiwidGltZXpvbmUiOiJHTVQrMiIsInRpbWV6b25lT2Zmc2V0IjotMTIwLCJ1c2VyX2FnZW50IjoiTW96aWxsYS81LjAgKE1hY2ludG9zaDsgSW50ZWwgTWFjIE9TIFggMTBfMTVfNykgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzkxLjAuNDQ3Mi4xNjQgU2FmYXJpLzUzNy4zNiIsImxpc3RfcGx1Z2luIjoiT0hqUm9VcTEsQnJhdmUgUG9ydGFibGUgRG9jdW1lbnQgRm9ybWF0IHBsdWctaW4sYXRXclZLRixCcmF2ZSBkb2MgIiwiY2FudmFzX2NvZGUiOiI2ZWM2ZGQyZSIsIndlYmdsX3ZlbmRvciI6IkludGVsIEluYy4iLCJ3ZWJnbF9yZW5kZXJlciI6IkludGVsKFIpIFVIRCBHcmFwaGljcyA2MzAiLCJhdWRpbyI6IjEyMi44MTI4NTU3MTk1MjMyMSIsInBsYXRmb3JtIjoiTWFjSW50ZWwiLCJ3ZWJfdGltZXpvbmUiOiJFdXJvcGUvUm9tZSIsImRldmljZV9uYW1lIjoiQ2hyb21lIFY5MS4wLjQ0NzIuMTY0IChNYWMgT1MpIiwiZmluZ2VycHJpbnQiOiIzODE4MDlmZDU0MDBiNmU0MTZhMmEwYmMzYWU5OTBjMyIsImRldmljZV9pZCI6IiIsInJlbGF0ZWRfZGV2aWNlX2lkcyI6IiJ9\",\n        \"fvideo-id\": \"3136771bac4babbe9b571f7c39bbab26e305dd80\",\n        \"lang\": \"en\",\n        \"sec-fetch-dest\": \"empty\",\n        \"sec-fetch-mode\": \"cors\",\n        \"sec-fetch-site\": \"same-origin\",\n        \"sec-gpc\": \"1\",\n        \"x-trace-id\": \"628d832a-f923-4eb1-851c-717006c7ddaf\",\n        \"x-ui-request-trace\": \"628d832a-f923-4eb1-851c-717006c7ddaf\",\n        \"cookie\": \"cid=forA6zjn; bnc-uuid=8f4fb583-8175-4258-ac46-159f30f01411; source=organic; campaign=www.google.com; fiat-prefer-currency=EUR; nft-init-compliance=true; home-ui-ab=B; isAccountsLoggedIn=y; lang=it; userPreferredCurrency=EUR_USD; BNC_FV_KEY=3136771bac4babbe9b571f7c39bbab26e305dd80; BNC_FV_KEY_EXPIRE=1627549151381; sensorsdata2015jssdkcross=%7B%22distinct_id%22%3A%2272530447%22%2C%22first_id%22%3A%221775a1b52a7957-06b8150f14079a-6915227c-2621440-1775a1b52a9b92%22%2C%22props%22%3A%7B%22%24latest_traffic_source_type%22%3A%22%E7%9B%B4%E6%8E%A5%E6%B5%81%E9%87%8F%22%2C%22%24latest_search_keyword%22%3A%22%E6%9C%AA%E5%8F%96%E5%88%B0%E5%80%BC_%E7%9B%B4%E6%8E%A5%E6%89%93%E5%BC%80%22%2C%22%24latest_referrer%22%3A%22%22%7D%2C%22%24device_id%22%3A%221775a1b52a7957-06b8150f14079a-6915227c-2621440-1775a1b52a9b92%22%7D\"\n      },\n      \"referrer\": \"https://www.binance.com/en/nft/market\",\n      \"referrerPolicy\": \"origin-when-cross-origin\",\n      \"body\": \"{\\\"category\\\":0,\\\"keyword\\\":\\\"\\\",\\\"orderBy\\\":\\\"list_time\\\",\\\"orderType\\\":-1,\\\"page\\\":1,\\\"rows\\\":100}\",\n      \"method\": \"POST\",\n      \"mode\": \"cors\"\n    })\n      .then(res => res.json())\n      .then(\n        (result) => {\n          this.setState({\n            isLoaded: true,\n            items: result.data.rows\n          });\n        },\n        // Nota: Ã¨ importante gestire gli errori qui\n        // invece di un blocco catch() in modo da non fare passare\n        // eccezioni da bug reali nei componenti.\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        }\n      )\n  }\n\n  render() {\n    const { error, isLoaded, items } = this.state;\n    if (error) {\n      return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n      return <div>Loading...</div>;\n    } else {\n      return (\n        <div style={{ height: 400, width: \"100%\" }}>\n          <DataGrid\n            rows={rows}\n            columns={columns}\n            pageSize={100}\n            checkboxSelection\n            disableSelectionOnClick\n          />\n        </div>\n      /*\n      return (\n        <table className=\"tabella\">\n          <tr>\n            <th>ID</th>\n            <th>Prezzo</th>\n            <th>Valuta</th>\n            <th>URL</th>\n          </tr>\n          {items.map(item => (\n            <tr key={item.productId}>\n              <td>\n                {item.productId}\n              </td>\n              <td className=\"price\">\n                {item.amount}\n              </td>\n              <td>\n                {item.currency}\n              </td>\n              <td className=\"url\">\n                https://www.binance.com/en/nft/goods/blindBox/detail?productId={item.productId}&isProduct=1\n              </td>\n            </tr>\n          ))}\n        </table>*/\n      );\n    }\n  }\n}\n\nexport { App };\n\n/*this.state.items.sort((a, b) => a.amount > b.amount ? 1:-1).map(\n          (item, i) => <div key={item.productId}> {item.productId} {item.amount} {item.currency}</div>\n      )*/"]},"metadata":{},"sourceType":"module"}