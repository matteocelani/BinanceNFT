{"ast":null,"code":"var _jsxFileName = \"/Users/matteocelani/Documents/FenneMic/GitHub/BinanceNFT/src/App.js\";\nimport React from 'react';\nimport { DataGrid } from '@material-ui/data-grid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  field: \"id\",\n  type: \"number\",\n  headerName: \"ID\",\n  width: 100,\n  editable: false\n}, {\n  field: \"amount\",\n  type: \"number\",\n  headerName: \"Prezzo\",\n  width: 150,\n  editable: false\n}, {\n  field: \"currency\",\n  headerName: \"Valuta\",\n  width: 150,\n  editable: false\n}, {\n  field: \"title\",\n  headerName: \"Nome\",\n  type: \"number\",\n  width: 250,\n  editable: false\n}, {\n  field: \"tradeType\",\n  headerName: \"Asta\",\n  type: \"number\",\n  width: 150,\n  editable: false\n}];\n\nfunction App(value) {\n  return class extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        error: value.error,\n        isLoaded: value.isLoaded,\n        items: value.items\n      };\n    }\n\n    render() {\n      const {\n        error,\n        isLoaded,\n        items\n      } = this.state;\n      const rows = items.map(row => {\n        const {\n          productId,\n          ...rest\n        } = row;\n        return {\n          id: productId,\n          ...rest\n        };\n      });\n\n      if (error) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Error: \", error.message]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 16\n        }, this);\n      } else if (!isLoaded) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 16\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            height: 1000,\n            width: \"100%\"\n          },\n          children: /*#__PURE__*/_jsxDEV(DataGrid, {\n            rows: rows,\n            columns: columns,\n            id: \"productId\",\n            pageSize: 100\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this);\n      }\n    }\n\n  };\n}\n\n_c = App;\nexport { App };\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/matteocelani/Documents/FenneMic/GitHub/BinanceNFT/src/App.js"],"names":["React","DataGrid","columns","field","type","headerName","width","editable","App","value","Component","constructor","props","state","error","isLoaded","items","render","rows","map","row","productId","rest","id","message","height"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,wBAAzB;;AAEA,MAAMC,OAAO,GAAG,CACd;AACEC,EAAAA,KAAK,EAAE,IADT;AAEEC,EAAAA,IAAI,EAAE,QAFR;AAGEC,EAAAA,UAAU,EAAE,IAHd;AAIEC,EAAAA,KAAK,EAAE,GAJT;AAKEC,EAAAA,QAAQ,EAAE;AALZ,CADc,EAQd;AACEJ,EAAAA,KAAK,EAAE,QADT;AAEEC,EAAAA,IAAI,EAAE,QAFR;AAGEC,EAAAA,UAAU,EAAE,QAHd;AAIEC,EAAAA,KAAK,EAAE,GAJT;AAKEC,EAAAA,QAAQ,EAAE;AALZ,CARc,EAed;AACEJ,EAAAA,KAAK,EAAE,UADT;AAEEE,EAAAA,UAAU,EAAE,QAFd;AAGEC,EAAAA,KAAK,EAAE,GAHT;AAIEC,EAAAA,QAAQ,EAAE;AAJZ,CAfc,EAqBd;AACEJ,EAAAA,KAAK,EAAE,OADT;AAEEE,EAAAA,UAAU,EAAE,MAFd;AAGED,EAAAA,IAAI,EAAE,QAHR;AAIEE,EAAAA,KAAK,EAAE,GAJT;AAKEC,EAAAA,QAAQ,EAAE;AALZ,CArBc,EA4Bd;AACEJ,EAAAA,KAAK,EAAE,WADT;AAEEE,EAAAA,UAAU,EAAE,MAFd;AAGED,EAAAA,IAAI,EAAE,QAHR;AAIEE,EAAAA,KAAK,EAAE,GAJT;AAKEC,EAAAA,QAAQ,EAAE;AALZ,CA5Bc,CAAhB;;AAqCA,SAASC,GAAT,CAAaC,KAAb,EAAoB;AAClB,SAAO,cAAcT,KAAK,CAACU,SAApB,CAA8B;AACnCC,IAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,YAAMA,KAAN;AACA,WAAKC,KAAL,GAAa;AACXC,QAAAA,KAAK,EAAEL,KAAK,CAACK,KADF;AAEXC,QAAAA,QAAQ,EAAEN,KAAK,CAACM,QAFL;AAGXC,QAAAA,KAAK,EAAEP,KAAK,CAACO;AAHF,OAAb;AAKD;;AAEDC,IAAAA,MAAM,GAAG;AACP,YAAM;AAAEH,QAAAA,KAAF;AAASC,QAAAA,QAAT;AAAmBC,QAAAA;AAAnB,UAA6B,KAAKH,KAAxC;AAEA,YAAMK,IAAI,GAAGF,KAAK,CAACG,GAAN,CAAWC,GAAD,IAAS;AAC9B,cAAM;AAAEC,UAAAA,SAAF;AAAa,aAAGC;AAAhB,YAAyBF,GAA/B;AACA,eAAO;AAAEG,UAAAA,EAAE,EAAEF,SAAN;AAAiB,aAAGC;AAApB,SAAP;AACD,OAHY,CAAb;;AAKA,UAAIR,KAAJ,EAAW;AACT,4BAAO;AAAA,gCAAaA,KAAK,CAACU,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD,OAFD,MAEO,IAAI,CAACT,QAAL,EAAe;AACpB,4BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD,OAFM,MAEA;AACL,4BACE;AAAK,UAAA,KAAK,EAAE;AAAEU,YAAAA,MAAM,EAAE,IAAV;AAAgBnB,YAAAA,KAAK,EAAE;AAAvB,WAAZ;AAAA,iCACE,QAAC,QAAD;AACE,YAAA,IAAI,EAAEY,IADR;AAEE,YAAA,OAAO,EAAEhB,OAFX;AAGE,YAAA,EAAE,EAAC,WAHL;AAIE,YAAA,QAAQ,EAAE;AAJZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF;AAUD;AACF;;AAlCkC,GAArC;AAoCD;;KArCQM,G;AAwCT,SAASA,GAAT","sourcesContent":["import React from 'react';\nimport { DataGrid } from '@material-ui/data-grid';\n\nconst columns = [\n  {\n    field: \"id\",\n    type: \"number\",\n    headerName: \"ID\",\n    width: 100,\n    editable: false\n  },\n  {\n    field: \"amount\",\n    type: \"number\",\n    headerName: \"Prezzo\",\n    width: 150,\n    editable: false\n  },\n  {\n    field: \"currency\",\n    headerName: \"Valuta\",\n    width: 150,\n    editable: false\n  },\n  {\n    field: \"title\",\n    headerName: \"Nome\",\n    type: \"number\",\n    width: 250,\n    editable: false\n  },\n  {\n    field: \"tradeType\",\n    headerName: \"Asta\",\n    type: \"number\",\n    width: 150,\n    editable: false\n  }\n];\n\nfunction App(value) {\n  return class extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        error: value.error,\n        isLoaded: value.isLoaded,\n        items: value.items\n      };\n    }\n\n    render() {\n      const { error, isLoaded, items } = this.state;\n\n      const rows = items.map((row) => {\n        const { productId, ...rest } = row;\n        return { id: productId, ...rest };\n      });\n\n      if (error) {\n        return <div>Error: {error.message}</div>;\n      } else if (!isLoaded) {\n        return <div>Loading...</div>;\n      } else {\n        return (\n          <div style={{ height: 1000, width: \"100%\" }}>\n            <DataGrid\n              rows={rows}\n              columns={columns}\n              id=\"productId\"\n              pageSize={100}\n            />\n          </div>\n        );\n      }\n    }\n  }\n}\n\n\nexport { App };\n"]},"metadata":{},"sourceType":"module"}