{"ast":null,"code":"var _jsxFileName = \"/Users/matteocelani/Documents/FenneMic/GitHub/BinanceNFT/src/App.js\";\nimport React from 'react';\nimport { DataGrid } from '@material-ui/data-grid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  field: \"id\",\n  type: \"number\",\n  headerName: \"ID\",\n  width: 100,\n  editable: false\n}, {\n  field: \"amount\",\n  type: \"number\",\n  headerName: \"Prezzo\",\n  width: 150,\n  editable: false\n}, {\n  field: \"currency\",\n  headerName: \"Valuta\",\n  width: 150,\n  editable: false\n}, {\n  field: \"title\",\n  headerName: \"Nome\",\n  type: \"number\",\n  width: 250,\n  editable: false\n}, {\n  field: \"tradeType\",\n  headerName: \"Asta\",\n  type: \"number\",\n  width: 150,\n  editable: false\n}];\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: this.props.data.error,\n      isLoaded: this.props.data.isLoaded,\n      items: this.props.data.items\n    };\n  }\n\n  render() {\n    const {\n      error,\n      isLoaded,\n      items\n    } = this.state;\n    const rows = items.map(row => {\n      const {\n        productId,\n        ...rest\n      } = row;\n      return {\n        id: productId,\n        ...rest\n      };\n    });\n\n    if (this.props.data.error) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Error: \", error.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 16\n      }, this);\n    } else if (!isLoaded) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 16\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: 1000,\n          width: \"100%\"\n        },\n        children: /*#__PURE__*/_jsxDEV(DataGrid, {\n          rows: rows,\n          columns: columns,\n          id: \"productId\",\n          pageSize: 100\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this);\n    }\n  }\n\n}\n\nexport { App };","map":{"version":3,"sources":["/Users/matteocelani/Documents/FenneMic/GitHub/BinanceNFT/src/App.js"],"names":["React","DataGrid","columns","field","type","headerName","width","editable","App","Component","constructor","props","state","error","data","isLoaded","items","render","rows","map","row","productId","rest","id","message","height"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,wBAAzB;;AAEA,MAAMC,OAAO,GAAG,CACd;AACEC,EAAAA,KAAK,EAAE,IADT;AAEEC,EAAAA,IAAI,EAAE,QAFR;AAGEC,EAAAA,UAAU,EAAE,IAHd;AAIEC,EAAAA,KAAK,EAAE,GAJT;AAKEC,EAAAA,QAAQ,EAAE;AALZ,CADc,EAQd;AACEJ,EAAAA,KAAK,EAAE,QADT;AAEEC,EAAAA,IAAI,EAAE,QAFR;AAGEC,EAAAA,UAAU,EAAE,QAHd;AAIEC,EAAAA,KAAK,EAAE,GAJT;AAKEC,EAAAA,QAAQ,EAAE;AALZ,CARc,EAed;AACEJ,EAAAA,KAAK,EAAE,UADT;AAEEE,EAAAA,UAAU,EAAE,QAFd;AAGEC,EAAAA,KAAK,EAAE,GAHT;AAIEC,EAAAA,QAAQ,EAAE;AAJZ,CAfc,EAqBd;AACEJ,EAAAA,KAAK,EAAE,OADT;AAEEE,EAAAA,UAAU,EAAE,MAFd;AAGED,EAAAA,IAAI,EAAE,QAHR;AAIEE,EAAAA,KAAK,EAAE,GAJT;AAKEC,EAAAA,QAAQ,EAAE;AALZ,CArBc,EA4Bd;AACEJ,EAAAA,KAAK,EAAE,WADT;AAEEE,EAAAA,UAAU,EAAE,MAFd;AAGED,EAAAA,IAAI,EAAE,QAHR;AAIEE,EAAAA,KAAK,EAAE,GAJT;AAKEC,EAAAA,QAAQ,EAAE;AALZ,CA5Bc,CAAhB;;AAqCE,MAAMC,GAAN,SAAkBR,KAAK,CAACS,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,KAAKF,KAAL,CAAWG,IAAX,CAAgBD,KADZ;AAEXE,MAAAA,QAAQ,EAAE,KAAKJ,KAAL,CAAWG,IAAX,CAAgBC,QAFf;AAGXC,MAAAA,KAAK,EAAE,KAAKL,KAAL,CAAWG,IAAX,CAAgBE;AAHZ,KAAb;AAKD;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEJ,MAAAA,KAAF;AAASE,MAAAA,QAAT;AAAmBC,MAAAA;AAAnB,QAA6B,KAAKJ,KAAxC;AAEA,UAAMM,IAAI,GAAGF,KAAK,CAACG,GAAN,CAAWC,GAAD,IAAS;AAC9B,YAAM;AAAEC,QAAAA,SAAF;AAAa,WAAGC;AAAhB,UAAyBF,GAA/B;AACA,aAAO;AAAEG,QAAAA,EAAE,EAAEF,SAAN;AAAiB,WAAGC;AAApB,OAAP;AACD,KAHY,CAAb;;AAKA,QAAI,KAAKX,KAAL,CAAWG,IAAX,CAAgBD,KAApB,EAA2B;AACzB,0BAAO;AAAA,8BAAaA,KAAK,CAACW,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFD,MAEO,IAAI,CAACT,QAAL,EAAe;AACpB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFM,MAEA;AACL,0BACE;AAAK,QAAA,KAAK,EAAE;AAAEU,UAAAA,MAAM,EAAE,IAAV;AAAgBnB,UAAAA,KAAK,EAAE;AAAvB,SAAZ;AAAA,+BACE,QAAC,QAAD;AACE,UAAA,IAAI,EAAEY,IADR;AAEE,UAAA,OAAO,EAAEhB,OAFX;AAGE,UAAA,EAAE,EAAC,WAHL;AAIE,UAAA,QAAQ,EAAE;AAJZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF;AAUD;AACF;;AAlC+B;;AAsCpC,SAASM,GAAT","sourcesContent":["import React from 'react';\nimport { DataGrid } from '@material-ui/data-grid';\n\nconst columns = [\n  {\n    field: \"id\",\n    type: \"number\",\n    headerName: \"ID\",\n    width: 100,\n    editable: false\n  },\n  {\n    field: \"amount\",\n    type: \"number\",\n    headerName: \"Prezzo\",\n    width: 150,\n    editable: false\n  },\n  {\n    field: \"currency\",\n    headerName: \"Valuta\",\n    width: 150,\n    editable: false\n  },\n  {\n    field: \"title\",\n    headerName: \"Nome\",\n    type: \"number\",\n    width: 250,\n    editable: false\n  },\n  {\n    field: \"tradeType\",\n    headerName: \"Asta\",\n    type: \"number\",\n    width: 150,\n    editable: false\n  }\n];\n\n  class App extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        error: this.props.data.error,\n        isLoaded: this.props.data.isLoaded,\n        items: this.props.data.items\n      };\n    }\n\n    render() {\n      const { error, isLoaded, items } = this.state;\n\n      const rows = items.map((row) => {\n        const { productId, ...rest } = row;\n        return { id: productId, ...rest };\n      });\n\n      if (this.props.data.error) {\n        return <div>Error: {error.message}</div>;\n      } else if (!isLoaded) {\n        return <div>Loading...</div>;\n      } else {\n        return (\n          <div style={{ height: 1000, width: \"100%\" }}>\n            <DataGrid\n              rows={rows}\n              columns={columns}\n              id=\"productId\"\n              pageSize={100}\n            />\n          </div>\n        );\n      }\n    }\n  }\n\n\nexport { App };\n"]},"metadata":{},"sourceType":"module"}