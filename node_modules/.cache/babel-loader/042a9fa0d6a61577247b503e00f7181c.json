{"ast":null,"code":"var _jsxFileName = \"/Users/matteocelani/Documents/FenneMic/GitHub/BinanceNFT/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { DataGrid } from '@material-ui/data-grid';\nimport Link from '@material-ui/core/Link';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App(data) {\n  _s();\n\n  const columns = [{\n    field: \"id\",\n    type: \"number\",\n    headerName: \"ID\",\n    width: 100,\n    editable: false\n  }, {\n    field: \"title\",\n    headerName: \"Name\",\n    width: 250,\n    editable: false\n  }, {\n    field: \"amount\",\n    headerName: \"Price\",\n    type: \"number\",\n    width: 115,\n    editable: false\n  }, {\n    field: \"currency\",\n    headerName: \"Coin\",\n    width: 120,\n    editable: false\n  }, {\n    field: \"tradeType\",\n    headerName: \"Trade Type\",\n    type: \"number\",\n    width: 150,\n    editable: false\n  }, {\n    field: \"url\",\n    headerName: \"URL\",\n    width: 250,\n    renderCell: params => /*#__PURE__*/_jsxDEV(Link, {\n      target: \"_blank\",\n      href: params.value,\n      children: params.value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this),\n    editable: false\n  }];\n  const rows = data.data.items.map(row => {\n    const {\n      productId,\n      ...rest\n    } = row;\n    return {\n      id: productId,\n      ...rest\n    };\n  });\n  const coins = [data.data.coins.data];\n  const finalRows = [];\n\n  for (var i = 0; i < rows.length; i++) {\n    if (rows[i].tradeType === 1) {\n      if (rows[i].currency === \"BUSD\") {\n        finalRows[i] = {\n          id: rows[i].id,\n          title: rows[i].title,\n          usd: rows[i].amount,\n          amount: rows[i].amount,\n          currency: rows[i].currency,\n          tradeType: \"Buy Now\",\n          url: \"https://www.binance.com/en/nft/goods/blindBox/detail?productId=\" + rows[i].id + \"&isOpen=true&isProduct=1\"\n        };\n      } else if (rows[i].currency === \"BNB\") {\n        finalRows[i] = {\n          id: rows[i].id,\n          title: rows[i].title,\n          usd: coins[0].binancecoin * rows[i].amount,\n          amount: rows[i].amount,\n          currency: rows[i].currency,\n          tradeType: \"Buy Now\",\n          url: \"https://www.binance.com/en/nft/goods/blindBox/detail?productId=\" + rows[i].id + \"&isOpen=true&isProduct=1\"\n        };\n      } else if (rows[i].currency === \"ETH\") {\n        finalRows[i] = {\n          id: rows[i].id,\n          title: rows[i].title,\n          usd: data.data.coins.data.ethereum * rows[i].amount,\n          amount: rows[i].amount,\n          currency: rows[i].currency,\n          tradeType: \"Buy Now\",\n          url: \"https://www.binance.com/en/nft/goods/blindBox/detail?productId=\" + rows[i].id + \"&isOpen=true&isProduct=1\"\n        };\n      }\n    } else {\n      if (rows[i].currency === \"BUSD\") {\n        finalRows[i] = {\n          id: rows[i].id,\n          title: rows[i].title,\n          usd: rows[i].amount,\n          amount: rows[i].amount,\n          currency: rows[i].currency,\n          tradeType: \"Auction\",\n          url: \"https://www.binance.com/en/nft/goods/blindBox/detail?productId=\" + rows[i].id + \"&isOpen=true&isProduct=1\"\n        };\n      } else if (rows[i].currency === \"BNB\") {\n        finalRows[i] = {\n          id: rows[i].id,\n          title: rows[i].title,\n          usd: coins[0].binancecoin * rows[i].amount,\n          amount: rows[i].amount,\n          currency: rows[i].currency,\n          tradeType: \"Auction\",\n          url: \"https://www.binance.com/en/nft/goods/blindBox/detail?productId=\" + rows[i].id + \"&isOpen=true&isProduct=1\"\n        };\n      } else if (rows[i].currency === \"ETH\") {\n        finalRows[i] = {\n          id: rows[i].id,\n          title: rows[i].title,\n          usd: data.data.coins.data.ethereum * rows[i].amount,\n          amount: rows[i].amount,\n          currency: rows[i].currency,\n          tradeType: \"Auction\",\n          url: \"https://www.binance.com/en/nft/goods/blindBox/detail?productId=\" + rows[i].id + \"&isOpen=true&isProduct=1\"\n        };\n      }\n    }\n  }\n\n  console.log(finalRows);\n  const [sortModel, setSortModel] = React.useState([{\n    field: 'amount',\n    sort: 'asc'\n  }]);\n\n  if (data.data.error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", data.data.error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 12\n    }, this);\n  } else if (!data.data.isLoaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 12\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: 1200,\n        width: \"100%\"\n      },\n      children: /*#__PURE__*/_jsxDEV(DataGrid, {\n        sortModel: sortModel,\n        onSortModelChange: model => {\n          if (model != sortModel) setSortModel(model);\n        } // This line causes a bug\n        ,\n        rows: finalRows,\n        columns: columns,\n        pageSize: 100,\n        density: \"compact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_s(App, \"Kj8dwyDUnVWd/nL8iXpFl+NtvDk=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/matteocelani/Documents/FenneMic/GitHub/BinanceNFT/src/App.js"],"names":["React","DataGrid","Link","App","data","columns","field","type","headerName","width","editable","renderCell","params","value","rows","items","map","row","productId","rest","id","coins","finalRows","i","length","tradeType","currency","title","usd","amount","url","binancecoin","ethereum","console","log","sortModel","setSortModel","useState","sort","error","message","isLoaded","height","model"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { DataGrid } from '@material-ui/data-grid';\nimport Link from '@material-ui/core/Link';\n\nexport default function App(data) {\n\n  const columns = [\n    {\n      field: \"id\",\n      type: \"number\",\n      headerName: \"ID\",\n      width: 100,\n      editable: false\n    },\n    {\n      field: \"title\",\n      headerName: \"Name\",\n      width: 250,\n      editable: false\n    },\n    {\n      field: \"amount\",\n      headerName: \"Price\",\n      type: \"number\",\n      width: 115,\n      editable: false\n    },\n    {\n      field: \"currency\",\n      headerName: \"Coin\",\n      width: 120,\n      editable: false\n    },\n    {\n      field: \"tradeType\",\n      headerName: \"Trade Type\",\n      type: \"number\",\n      width: 150,\n      editable: false\n    },\n    {\n      field: \"url\",\n      headerName: \"URL\",\n      width: 250,\n      renderCell: (params) => (\n        <Link target=\"_blank\" href={params.value}>{params.value}</Link>),\n      editable: false\n    }\n  ];\n\n  const rows = data.data.items.map((row) => {\n    const { productId, ...rest } = row;\n    return { id: productId, ...rest };\n  });\n  const coins = [data.data.coins.data]\n\n  const finalRows = [];\n  for (var i = 0; i < rows.length; i++) {\n    if (rows[i].tradeType === 1) {\n      if (rows[i].currency === \"BUSD\") {\n        finalRows[i] =   \n      {\n        id: rows[i].id,\n        title: rows[i].title,\n        usd:rows[i].amount,\n        amount: rows[i].amount,\n        currency: rows[i].currency,\n        tradeType: \"Buy Now\",\n        url: \"https://www.binance.com/en/nft/goods/blindBox/detail?productId=\"+rows[i].id+\"&isOpen=true&isProduct=1\"\n      }\n      } else if (rows[i].currency === \"BNB\") {\n        finalRows[i] =   \n        {\n          id: rows[i].id,\n          title: rows[i].title,\n          usd: coins[0].binancecoin * rows[i].amount,\n          amount: rows[i].amount,\n          currency: rows[i].currency,\n          tradeType: \"Buy Now\",\n          url: \"https://www.binance.com/en/nft/goods/blindBox/detail?productId=\"+rows[i].id+\"&isOpen=true&isProduct=1\"\n        }\n        } else if (rows[i].currency === \"ETH\") {\n          finalRows[i] =   \n          {\n            id: rows[i].id,\n            title: rows[i].title,\n            usd: data.data.coins.data.ethereum * rows[i].amount,\n            amount: rows[i].amount,\n            currency: rows[i].currency,\n            tradeType: \"Buy Now\",\n            url: \"https://www.binance.com/en/nft/goods/blindBox/detail?productId=\"+rows[i].id+\"&isOpen=true&isProduct=1\"\n          }\n        }\n    } else {\n      if (rows[i].currency === \"BUSD\") {\n        finalRows[i] =   \n      {\n        id: rows[i].id,\n        title: rows[i].title,\n        usd:rows[i].amount,\n        amount: rows[i].amount,\n        currency: rows[i].currency,\n        tradeType: \"Auction\",\n        url: \"https://www.binance.com/en/nft/goods/blindBox/detail?productId=\"+rows[i].id+\"&isOpen=true&isProduct=1\"\n      }\n      } else if (rows[i].currency === \"BNB\") {\n        finalRows[i] =   \n        {\n          id: rows[i].id,\n          title: rows[i].title,\n          usd: coins[0].binancecoin * rows[i].amount,\n          amount: rows[i].amount,\n          currency: rows[i].currency,\n          tradeType: \"Auction\",\n          url: \"https://www.binance.com/en/nft/goods/blindBox/detail?productId=\"+rows[i].id+\"&isOpen=true&isProduct=1\"\n        }\n        } else if (rows[i].currency === \"ETH\") {\n          finalRows[i] =   \n          {\n            id: rows[i].id,\n            title: rows[i].title,\n            usd: data.data.coins.data.ethereum * rows[i].amount,\n            amount: rows[i].amount,\n            currency: rows[i].currency,\n            tradeType: \"Auction\",\n            url: \"https://www.binance.com/en/nft/goods/blindBox/detail?productId=\"+rows[i].id+\"&isOpen=true&isProduct=1\"\n          }\n        }\n    }\n  } \n  console.log(finalRows)\n\n  const [sortModel, setSortModel] = React.useState([\n    {\n      field: 'amount',\n      sort: 'asc',\n    },\n  ]);\n\n  if (data.data.error) {\n    return <div>Error: {data.data.error.message}</div>;\n  } else if (!data.data.isLoaded) {\n    return <div>Loading...</div>;\n  } else {\n    return (\n      <div style={{ height: 1200, width: \"100%\" }}>\n        <DataGrid\n          sortModel={sortModel}\n          onSortModelChange={(model) => {if (model != sortModel) setSortModel(model)}}                      // This line causes a bug\n          rows={finalRows}\n          columns={columns}\n          pageSize={100}\n          density=\"compact\"\n        />\n      </div>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}