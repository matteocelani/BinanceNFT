import { GridColumnLookup, GridColumns, GridColumnsMeta } from '../../../models/colDef/gridColDef';
import { GridState } from '../core/gridState';
export declare const gridColumnsSelector: (state: GridState) => import("../../../models/colDef/gridColDef").GridInternalColumns;
export declare const allGridColumnsFieldsSelector: (state: GridState) => string[];
export declare const gridColumnLookupSelector: (state: GridState) => GridColumnLookup;
export declare const allGridColumnsSelector: import("reselect").OutputSelector<GridState, GridColumns, (res1: string[], res2: GridColumnLookup) => GridColumns>;
export declare const visibleGridColumnsSelector: import("reselect").OutputSelector<GridState, GridColumns, (res: GridColumns) => GridColumns>;
export declare const gridColumnsMetaSelector: import("reselect").OutputSelector<GridState, GridColumnsMeta, (res: GridColumns) => GridColumnsMeta>;
export declare const filterableGridColumnsSelector: import("reselect").OutputSelector<GridState, GridColumns, (res: GridColumns) => GridColumns>;
export declare const filterableGridColumnsIdsSelector: import("reselect").OutputSelector<GridState, string[], (res: GridColumns) => string[]>;
export declare const visibleGridColumnsLengthSelector: import("reselect").OutputSelector<GridState, number, (res: GridColumns) => number>;
export declare const gridColumnsTotalWidthSelector: import("reselect").OutputSelector<GridState, number, (res: GridColumnsMeta) => number>;
