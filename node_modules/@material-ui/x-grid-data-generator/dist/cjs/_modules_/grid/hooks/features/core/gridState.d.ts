import { GridInternalColumns } from '../../../models/colDef/gridColDef';
import { GridContainerProps, GridScrollBarState, GridViewportSizeState } from '../../../models/gridContainerProps';
import { GridEditRowsModel } from '../../../models/gridEditRowModel';
import { GridOptions } from '../../../models/gridOptions';
import { GridColumnMenuState } from '../columnMenu/columnMenuState';
import { GridColumnReorderState } from '../columnReorder/columnReorderState';
import { GridColumnResizeState } from '../columnResize/columnResizeState';
import { GridGridDensity } from '../density/densityState';
import { GridFilterModelState } from '../filter/gridFilterModelState';
import { VisibleGridRowsState } from '../filter/visibleGridRowsState';
import { GridFocusState, GridTabIndexState } from '../focus/gridFocusState';
import { GridPreferencePanelState } from '../preferencesPanel/gridPreferencePanelState';
import { InternalGridRowsState } from '../rows/gridRowsState';
import { GridSelectionState } from '../selection/gridSelectionState';
import { GridSortingState } from '../sorting/gridSortingState';
import { InternalRenderingState } from '../virtualization/renderingState';
import { GridPaginationState } from '../pagination/gridPaginationState';
export interface GridState {
    rows: InternalGridRowsState;
    editRows: GridEditRowsModel;
    pagination: GridPaginationState;
    options: GridOptions;
    isScrolling: boolean;
    columns: GridInternalColumns;
    columnReorder: GridColumnReorderState;
    columnResize: GridColumnResizeState;
    columnMenu: GridColumnMenuState;
    rendering: InternalRenderingState;
    containerSizes: GridContainerProps | null;
    viewportSizes: GridViewportSizeState;
    scrollBar: GridScrollBarState;
    sorting: GridSortingState;
    focus: GridFocusState;
    tabIndex: GridTabIndexState;
    selection: GridSelectionState;
    filter: GridFilterModelState;
    visibleRows: VisibleGridRowsState;
    preferencePanel: GridPreferencePanelState;
    density: GridGridDensity;
    error?: any;
}
export declare const getInitialGridState: () => GridState;
