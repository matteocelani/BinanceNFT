"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("./_tslib-50d11dad.js"),r=require("fs"),t=require("yargs");function i(e){if(e&&e.__esModule)return e;var r=Object.create(null);return e&&Object.keys(e).forEach((function(t){if("default"!==t){var i=Object.getOwnPropertyDescriptor(e,t);Object.defineProperty(r,t,i.get?i:{enumerable:!0,get:function(){return e[t]}})}})),r.default=e,Object.freeze(r)}require("react"),require("@material-ui/core/Avatar"),require("chance"),require("@material-ui/core/colors"),require("@material-ui/styles"),require("@material-ui/core/Tooltip"),require("@material-ui/icons/Info"),require("clsx"),require("@material-ui/core/styles"),require("@material-ui/core/utils"),require("@material-ui/lab/Rating"),require("@material-ui/icons/ReportProblem"),require("@material-ui/icons/Autorenew"),require("@material-ui/icons/Done"),require("@material-ui/core/Chip"),require("@material-ui/lab/Autocomplete"),require("@material-ui/core/InputBase"),require("@material-ui/core/Slider"),require("@material-ui/core/Select"),require("@material-ui/core/MenuItem"),require("@material-ui/core/ListItemIcon"),require("@material-ui/core/ListItemText");var a=i(r),o=i(t);exports.datagenCli=function(){o.command({command:"$0",describe:"Generates Component.propTypes from TypeScript declarations",builder:e=>e.option("dataset",{default:"",describe:'A dataset can be "commodity" | "employee"',type:"string"}).option("output",{default:"",describe:'The output file, if not passed, it will generate "./<dataset>-<size>.json"',type:"string"}).option("pretty",{default:!1,describe:"Print a prettier output",type:"boolean"}).option("size",{default:"1000",describe:"The number of rows to generate",type:"string"}),handler:r=>{var t,i;console.log(`Generating new ${r.dataset} dataset with ${Number(r.size).toLocaleString()} rows`),(t=Number(r.size),i=r.dataset,e.__awaiter(void 0,void 0,void 0,(function*(){return(yield e.getRealData(Number(t),"commodity"===i.toLowerCase()?e.getCommodityColumns():e.getEmployeeColumns())).rows}))).then((e=>{const t=r.output?r.output:`./${r.dataset}-${r.size}.json`;console.log(`Saving generated dataset in ${t}`),a.writeFileSync(t,JSON.stringify(e,null,r.pretty?2:void 0))}))}}).help().strict(!0).version(!1).parse()};
