import { GridRowId, GridRowModel } from '../../../models/gridRows';
import { GridState } from '../core/gridState';
import { InternalGridRowsState } from './gridRowsState';
export declare type GridRowsLookup = Record<GridRowId, GridRowModel>;
export declare const gridRowsStateSelector: (state: GridState) => InternalGridRowsState;
export declare const gridRowCountSelector: import("reselect").OutputSelector<GridState, number, (res: InternalGridRowsState) => number>;
export declare const gridRowsLookupSelector: import("reselect").OutputSelector<GridState, GridRowsLookup, (res: InternalGridRowsState) => GridRowsLookup>;
export declare const unorderedGridRowIdsSelector: import("reselect").OutputSelector<GridState, GridRowId[], (res: InternalGridRowsState) => GridRowId[]>;
export declare const unorderedGridRowModelsSelector: import("reselect").OutputSelector<GridState, import("../../../models/gridRows").GridRowData[], (res: InternalGridRowsState) => import("../../../models/gridRows").GridRowData[]>;
